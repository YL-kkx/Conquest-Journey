# Configuration file

city_hall {
    # If set to false, spawners will only be disabled when expired, not broken
    B:breakSpawner=false

    # If set to true, spawners will count mobs when they are killed rather than when they are spawned
    B:incrementOnMobDeath=true

    # A list of item ids that a mob spawner drops when broken
    # Format: 'modid:item(:count(:meta(:chance)))' (count, meta and chance are optional)
    S:itemsDropped <
     >

    # When a spawner has spawned this number of mobs over this lifetime, it will get broken automatically
    I:mobThreshold=5

    # The formula used to calculate xp dropped is 'xpDropped + rand(this number) + rand(this number)'
    # Min: 0
    # Max: 2147483647
    I:randXpVariation=15

    # This multiplier is applied on the spawner's spawn delay each time a mob is spawned. 
    # Can be used to make mobs spawned exponentially faster or slower.
    D:spawnRateModifier=1.0

    # The minimum amount of xp dropped by a spawner when broken
    I:xpDropped=15

    ##########################################################################################################
    # spawnconditions
    #--------------------------------------------------------------------------------------------------------#
    # Regroups config options aiming to alter mob spawners spawning conditions
    ##########################################################################################################

    spawnconditions {
        # If forceSpawnerMobSpawns is enabled, will prevent hostile mobs from spawning in daylight
        B:checkSunlight=true

        # If set to true, spawners will not run mob-specific checks on any entity
        B:forceSpawnerAllSpawns=false

        # If set to true, spawners will not run mob-specific checks on hostile mob entities
        # This most notably prevents players from disabling a spawner with torches or other light sources
        B:forceSpawnerMobSpawns=false
    }

    ##########################################################################################################
    # mobloot
    #--------------------------------------------------------------------------------------------------------#
    # Groups config options related to custom drops from mobs spawned by this spawner type
    ##########################################################################################################

    mobloot {
        # Individual item drop addition configuration for mobs spawned by this spawner type
        # Format: 'modid:entity,modid:item(:count(:meta(:chance)))(,modid:item(:count(:meta(:chance))))...'
        # Anything in parenthesis is optional, and you can enter as many items as you want
        # Eg: minecraft:skeleton,minecraft:dye:100:15:0.5,minecraft:bone:1:1:1
        S:itemDropAdditions <
         >

        # Individual item drop removal configuration for mobs spawned by this spawner type
        # Format: 'modid:entity(,modid:item(:meta))(,modid:item(:meta))...'
        # Anything in parenthesis is optional, and you can enter as many items as you want
        # If don't enter any items, all item drops are removed from the mob (itemDropAdditions are added afterwards)
        S:itemDropRemovals <
         >

        # Individual xp drop multiplier configuration for mobs spawned by this spawner type
        # Format: 'modid:entity:xpMultiplier(:flatXp)' (flatXp is optional)
        S:xpMultipliers <
         >

        defaultvalues {
            # Which items to add to the drops of the mobs spawned
            # Format: 'modid:item(:count(:meta(:chance)))' (count, meta and chance are optional)
            S:addedItems <
             >

            # Flat xp modifier that will be added to mobs spawned by this spawner type
            I:flatXpIncrease=0

            # Remove all existing item drops from the mobs spawned by this spawner
            # 'Added Items' are added afterwards
            B:removeAllItems=false

            # Which items to remove from the drops of the mobs spawned
            # Format: 'modid:item(:meta)' (meta is optional)
            # If 'Remove All Items' is true, this does nothing
            S:removedItems <
             >

            # xp drop multiplier for mobs spawned by this spawner type
            D:xpMultiplier=1.0
        }

    }

}


recruiting_institute {
    B:breakSpawner=false
    B:incrementOnMobDeath=true
    S:itemsDropped <
     >
    I:mobThreshold=5
    I:randXpVariation=15
    D:spawnRateModifier=1.0
    I:xpDropped=15

    spawnconditions {
        B:checkSunlight=true
        B:forceSpawnerAllSpawns=false
        B:forceSpawnerMobSpawns=false
    }

    mobloot {
        S:itemDropAdditions <
         >
        S:itemDropRemovals <
         >
        S:xpMultipliers <
         >

        defaultvalues {
            S:addedItems <
             >
            I:flatXpIncrease=0
            B:removeAllItems=false
            S:removedItems <
             >
            D:xpMultiplier=1.0
        }

    }

}


